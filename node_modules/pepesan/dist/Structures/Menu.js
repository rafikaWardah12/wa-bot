"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Menu = void 0;
const Database_1 = require("../Database");
class Menu {
    constructor(clientId, jid) {
        this.clientId = clientId;
        this.jid = jid;
    }
    get() {
        return __awaiter(this, void 0, void 0, function* () {
            const [menuModel] = yield Database_1.Menu.findOrCreate({
                where: { jid: this.jid, clientId: this.clientId }, defaults: { jid: this.jid, menu: "" },
            });
            return JSON.parse(menuModel.menu ? menuModel.menu : "{}");
        });
    }
    setMenu(menu) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            if ((_a = global.CONFIG) === null || _a === void 0 ? void 0 : _a.reusableMenu) {
                const defaultMenu = yield this.get();
                menu = Object.assign(Object.assign({}, defaultMenu), menu);
            }
            yield Database_1.Menu.update({ menu: JSON.stringify(menu) }, {
                where: {
                    clientId: this.clientId,
                    jid: this.jid
                }
            });
        });
    }
    deleteMenu() {
        return __awaiter(this, void 0, void 0, function* () {
            yield Database_1.Menu.update({ menu: null }, {
                where: {
                    clientId: this.clientId,
                    jid: this.jid
                }
            });
        });
    }
}
exports.Menu = Menu;
