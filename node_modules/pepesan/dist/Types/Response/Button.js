"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArrayOfObjectButton = exports.ArrayOfStringButton = exports.Button = void 0;
const _1 = require(".");
class Button extends _1.MessageResponse {
    constructor(text, footer) {
        super();
        this.text = text !== null && text !== void 0 ? text : " ";
        this.footer = footer;
    }
    static fromArrayOfString(buttons, text, footer) {
        return new ArrayOfStringButton(buttons, text, footer);
    }
    static fromArrayOfObject(buttons, text, footer) {
        return new ArrayOfObjectButton(buttons, text, footer);
    }
    getMessageContent() {
        return;
    }
}
exports.Button = Button;
class ArrayOfStringButton extends Button {
    constructor(buttons, text, footer) {
        super(text, footer);
        this.buttons = buttons;
    }
    get formattedButtons() {
        return this.buttons.map((button, index) => {
            return {
                buttonId: 'btn' + index,
                buttonText: {
                    displayText: button
                },
                type: 1
            };
        });
    }
    getMessageContent() {
        return { text: this.text, footer: this.footer, buttons: this.formattedButtons };
    }
}
exports.ArrayOfStringButton = ArrayOfStringButton;
class ArrayOfObjectButton extends Button {
    constructor(buttons, text, footer) {
        super(text, footer);
        this.buttons = buttons;
    }
    get formattedButtons() {
        return this.buttons.map((button) => {
            return {
                buttonId: button.value,
                buttonText: {
                    displayText: button.text
                },
                type: 1
            };
        });
    }
    getMessageContent() {
        return { text: this.text, footer: this.footer, buttons: this.formattedButtons, };
    }
}
exports.ArrayOfObjectButton = ArrayOfObjectButton;
