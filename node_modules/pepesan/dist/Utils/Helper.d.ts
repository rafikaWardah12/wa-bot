/// <reference types="node" />
import { ConnectionState, proto } from '@whiskeysockets/baileys';
export declare const parseJid: (number: string) => string;
export declare const parseNumber: (jid: string) => string;
export declare const getTextFromMessage: (message?: proto.IMessage) => string;
export declare const findAsyncSequential: <T>(array: T[], predicate: (t: T) => Promise<boolean | T>) => Promise<T | undefined>;
export declare const filterAsync: <T>(array: T[] | undefined, predicate: (t: T) => Promise<boolean>) => Promise<T[]>;
export declare const isTextMatch: (text?: string, comparison?: string) => boolean;
export declare const getValidRegex: (text: string) => RegExp | undefined;
export declare const getObjectType: (obj: any, deep?: number) => string | undefined;
export declare const getAllSubclasses: (baseClass: any) => string[];
export declare const getBufferFromUrl: (url: string) => Promise<Buffer>;
export declare const getBase64FromUrl: (url: string) => Promise<string>;
export declare const getParamsName: (fun: Function) => string[];
export declare const formatString: (text: string, params: any) => string;
export declare const isValidJid: (jid: string) => boolean;
export declare const getConnectionStatusString: (state: Partial<ConnectionState>) => "Connected" | "Connecting" | "Disconnected" | "Scanning QR" | "Unknown";
export declare const sleep: (ms: number) => Promise<unknown>;
